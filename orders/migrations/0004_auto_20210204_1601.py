# Generated by Django 3.1 on 2021-02-04 10:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('addresses', '0001_initial'),
        ('cart', '0004_productentry_product_status'),
        ('orders', '0003_auto_20201130_1716'),
    ]

    operations = [
        migrations.AlterField(
            model_name='order',
            name='active',
            field=models.BooleanField(default=True, help_text='If true, it means the order have not been concluded yet. Either it is not delivered or cancelled.'),
        ),
        migrations.AlterField(
            model_name='order',
            name='billing_address',
            field=models.ForeignKey(help_text='Reference to the Address added by the user. This will be used as billing address for the user', on_delete=django.db.models.deletion.DO_NOTHING, related_name='billing_address', to='addresses.address'),
        ),
        migrations.AlterField(
            model_name='order',
            name='cart',
            field=models.ForeignKey(help_text='Reference to the Cart instance of the user which have been userd to place the order', on_delete=django.db.models.deletion.CASCADE, to='cart.cart'),
        ),
        migrations.AlterField(
            model_name='order',
            name='day_id',
            field=models.IntegerField(blank=True, default=1, help_text='This would be the day ID of the order. It means if on monday, B Order placed after 12 orders then day_id will be 13 and on tuesday, C Order placed on the morning then its day_id would be 1', null=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='discount',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Discount user got on the order. Will be calculated automatically using discount percentages of each product item.', max_digits=100),
        ),
        migrations.AlterField(
            model_name='order',
            name='id',
            field=models.CharField(blank=True, help_text='Primary key of the order object', max_length=10, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='is_added_for_received_orders',
            field=models.BooleanField(default=False, help_text='If true, it means this order have been used for calculation of recieved order stats for the network'),
        ),
        migrations.AlterField(
            model_name='order',
            name='is_added_for_refund',
            field=models.BooleanField(default=False, help_text='If true, it means this order have been used for refund calculation of network stats'),
        ),
        migrations.AlterField(
            model_name='order',
            name='is_added_for_sales',
            field=models.BooleanField(default=False, help_text='If true, it means this order have been used for sales calculation of network stats'),
        ),
        migrations.AlterField(
            model_name='order',
            name='is_added_for_total_income',
            field=models.BooleanField(default=False, help_text='If true, it means this order have been used for total income calculation of network stats'),
        ),
        migrations.AlterField(
            model_name='order',
            name='is_billing_shipping_same',
            field=models.BooleanField(default=False, help_text='If true, it means billing address and shipping address are both same. Shipping address can be copied from billing address or can be null.'),
        ),
        migrations.AlterField(
            model_name='order',
            name='is_paid',
            field=models.BooleanField(default=False, help_text='If true, it means the payment for the order has been already made'),
        ),
        migrations.AlterField(
            model_name='order',
            name='payment_method',
            field=models.CharField(blank=True, choices=[('cod', 'Cash on Delivery'), ('prepaid', 'Pre paid')], default='cod', help_text='Payment method opted by the user for the current order', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='shipping_address',
            field=models.ForeignKey(blank=True, help_text='Reference to the Address added by the user. This will be used as shipping address for the user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='shipping_address', to='addresses.address'),
        ),
        migrations.AlterField(
            model_name='order',
            name='shipping_total',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Shipping total of the order. It means how much user have to pay as shipping charges. Will be copied from cart', max_digits=100),
        ),
        migrations.AlterField(
            model_name='order',
            name='status',
            field=models.CharField(blank=True, choices=[('Created', 'Created'), ('Confirmed', 'Confirmed'), ('Shipped', 'Shipped'), ('Dispatched', 'Dispatched'), ('Out', 'Out for Delivery'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled'), ('Returned', 'Returned'), ('Refunded', 'Refunded'), ('Archived', 'Archived')], default='Created', help_text='Order Status', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='tax',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Tax user will be paying for the order', max_digits=100),
        ),
        migrations.AlterField(
            model_name='order',
            name='timestamp',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp at which the order is created'),
        ),
        migrations.AlterField(
            model_name='order',
            name='total',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Order total', max_digits=100),
        ),
        migrations.AlterField(
            model_name='order',
            name='updated',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp at which the order has been updated'),
        ),
    ]
